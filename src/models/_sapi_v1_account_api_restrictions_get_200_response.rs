/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SapiV1AccountApiRestrictionsGet200Response {
    #[serde(rename = "ipRestrict")]
    pub ip_restrict: bool,
    #[serde(rename = "createTime")]
    pub create_time: i64,
    /// This option allows you to withdraw via API. You must apply the IP Access Restriction filter in order to enable withdrawals
    #[serde(rename = "enableWithdrawals")]
    pub enable_withdrawals: bool,
    /// This option authorizes this key to transfer funds between your master account and your sub account instantly
    #[serde(rename = "enableInternalTransfer")]
    pub enable_internal_transfer: bool,
    /// Authorizes this key to be used for a dedicated universal transfer API to transfer multiple supported currencies. Each business's own transfer API rights are not affected by this authorization
    #[serde(rename = "permitsUniversalTransfer")]
    pub permits_universal_transfer: bool,
    /// Authorizes this key to Vanilla options trading
    #[serde(rename = "enableVanillaOptions")]
    pub enable_vanilla_options: bool,
    #[serde(rename = "enableReading")]
    pub enable_reading: bool,
    /// API Key created before your futures account opened does not support futures API service
    #[serde(rename = "enableFutures")]
    pub enable_futures: bool,
    /// This option can be adjusted after the Cross Margin account transfer is completed
    #[serde(rename = "enableMargin")]
    pub enable_margin: bool,
    #[serde(rename = "enableSpotAndMarginTrading")]
    pub enable_spot_and_margin_trading: bool,
    /// Expiration time for spot and margin trading permission
    #[serde(rename = "tradingAuthorityExpirationTime")]
    pub trading_authority_expiration_time: i64,
}

impl SapiV1AccountApiRestrictionsGet200Response {
    pub fn new(ip_restrict: bool, create_time: i64, enable_withdrawals: bool, enable_internal_transfer: bool, permits_universal_transfer: bool, enable_vanilla_options: bool, enable_reading: bool, enable_futures: bool, enable_margin: bool, enable_spot_and_margin_trading: bool, trading_authority_expiration_time: i64) -> SapiV1AccountApiRestrictionsGet200Response {
        SapiV1AccountApiRestrictionsGet200Response {
            ip_restrict,
            create_time,
            enable_withdrawals,
            enable_internal_transfer,
            permits_universal_transfer,
            enable_vanilla_options,
            enable_reading,
            enable_futures,
            enable_margin,
            enable_spot_and_margin_trading,
            trading_authority_expiration_time,
        }
    }
}


