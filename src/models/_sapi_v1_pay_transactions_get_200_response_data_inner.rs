/*
 * Binance Public Spot API
 *
 * OpenAPI Specifications for the Binance Public Spot API  API documents:   - [https://github.com/binance/binance-spot-api-docs](https://github.com/binance/binance-spot-api-docs)   - [https://binance-docs.github.io/apidocs/spot/en](https://binance-docs.github.io/apidocs/spot/en)
 *
 * The version of the OpenAPI document: 1.0
 * 
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct SapiV1PayTransactionsGet200ResponseDataInner {
    /// Enumï¼šPAY(C2B Merchant Acquiring Payment), PAY_REFUND(C2B Merchant Acquiring Payment,refund), C2C(C2C Transfer Payment),CRYPTO_BOX(Crypto box), CRYPTO_BOX_RF(Crypto Box, refund), C2C_HOLDING(Transfer to new Binance user), C2C_HOLDING_RF(Transfer to new Binance user,refund), PAYOUT(B2C Disbursement Payment)
    #[serde(rename = "orderType")]
    pub order_type: String,
    #[serde(rename = "transactionId")]
    pub transaction_id: String,
    #[serde(rename = "transactionTime")]
    pub transaction_time: i64,
    /// order amount(up to 8 decimal places), positive is income, negative is expenditure
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "currency")]
    pub currency: String,
    #[serde(rename = "fundsDetail")]
    pub funds_detail: Vec<crate::models::SapiV1PayTransactionsGet200ResponseDataInnerFundsDetailInner>,
}

impl SapiV1PayTransactionsGet200ResponseDataInner {
    pub fn new(order_type: String, transaction_id: String, transaction_time: i64, amount: String, currency: String, funds_detail: Vec<crate::models::SapiV1PayTransactionsGet200ResponseDataInnerFundsDetailInner>) -> SapiV1PayTransactionsGet200ResponseDataInner {
        SapiV1PayTransactionsGet200ResponseDataInner {
            order_type,
            transaction_id,
            transaction_time,
            amount,
            currency,
            funds_detail,
        }
    }
}


